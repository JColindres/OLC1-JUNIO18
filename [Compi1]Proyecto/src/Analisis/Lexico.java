/* The following code was generated by JFlex 1.6.1 */


package Analisis;
import java.io.Reader;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import java.util.ArrayList;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>src/Analisis/Scanner.jflex</tt>
 */
public class Lexico implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIO1 = 2;
  public static final int COMENTARIO2 = 4;
  public static final int ATRIBUTO = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\75\1\4\1\77\1\76\1\76\22\0\1\7\1\64\1\3"+
    "\1\0\1\72\1\62\1\73\1\10\1\66\1\67\1\61\1\60\1\0"+
    "\1\56\1\2\1\31\1\1\1\23\1\34\1\35\1\36\1\37\1\40"+
    "\3\1\1\0\1\65\1\24\1\63\1\30\2\0\1\15\1\32\1\44"+
    "\1\14\1\12\1\17\1\46\1\25\1\42\1\50\1\55\1\20\1\27"+
    "\1\47\1\16\1\43\1\53\1\13\1\22\1\26\1\52\1\11\1\57"+
    "\1\45\1\33\1\51\1\70\1\0\1\71\1\0\1\6\1\0\1\15"+
    "\1\32\1\44\1\14\1\12\1\17\1\46\1\25\1\42\1\50\1\55"+
    "\1\20\1\27\1\47\1\16\1\43\1\53\1\13\1\22\1\26\1\52"+
    "\1\11\1\57\1\45\1\33\1\51\1\0\1\74\10\0\1\77\113\0"+
    "\1\5\37\0\1\5\76\0\2\41\115\0\1\21\u1ea8\0\1\77\1\77"+
    "\u0100\0\1\54\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\1\2\1\3\1\4\1\5\1\6\1\1"+
    "\6\6\1\1\1\6\1\7\3\6\1\10\1\11\1\6"+
    "\1\1\5\6\1\12\1\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\3\1\1\25\1\1"+
    "\1\26\1\27\1\0\1\30\1\0\20\6\5\0\5\6"+
    "\3\0\1\31\1\0\1\32\1\33\2\6\1\0\4\6"+
    "\1\0\1\6\1\34\3\6\3\0\17\6\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\2\6\1\0\6\6\1\0\2\6\1\0"+
    "\13\6\6\0\6\6\3\0\1\51\1\0\1\52\1\53"+
    "\1\54\1\55\1\56\1\57\1\60\1\0\1\61\10\0"+
    "\2\6\1\0\6\6\1\0\4\6\1\0\1\62\1\0"+
    "\1\6\1\62\1\6\1\0\14\6\1\0\4\6\1\0"+
    "\1\6\1\0\2\6\1\63\3\6\1\0\2\6\1\0"+
    "\4\6\1\0\1\6\1\64\2\6\1\0\2\6\1\65"+
    "\6\0\6\6\1\66\1\0\1\67\22\0\1\70\1\71"+
    "\1\0\2\6\1\0\6\6\1\0\1\6\1\0\4\6"+
    "\2\0\2\6\1\0\3\6\1\0\3\6\1\0\2\6"+
    "\1\0\1\6\1\72\1\0\2\6\2\73\2\6\1\74"+
    "\1\6\1\0\1\6\1\0\1\6\1\75\3\6\2\76"+
    "\1\0\1\6\2\77\1\0\3\6\1\0\2\6\1\0"+
    "\1\6\2\100\1\6\1\101\3\0\1\102\1\103\1\101"+
    "\2\6\1\102\1\103\6\0\1\104\1\0\1\105\1\106"+
    "\1\107\1\110\1\111\1\112\1\113\1\0\1\114\2\0"+
    "\1\115\2\6\2\116\4\6\1\0\1\6\1\0\1\6"+
    "\2\0\3\6\1\0\2\6\2\0\2\6\2\117\2\6"+
    "\1\0\1\6\1\0\1\6\1\120\1\0\1\6\1\0"+
    "\1\6\1\0\1\6\1\0\6\6\1\0\1\6\2\121"+
    "\2\6\1\122\1\0\1\6\1\0\3\6\1\0\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\1\6\1\0\1\123"+
    "\1\124\1\123\1\124\1\125\1\126\1\127\1\0\1\130"+
    "\5\0\2\6\1\0\3\6\1\131\1\132\1\0\1\6"+
    "\2\133\2\0\3\6\1\0\2\6\1\134\1\0\1\134"+
    "\1\6\1\0\2\6\1\0\1\6\1\0\1\6\1\0"+
    "\1\6\1\0\1\6\2\135\1\0\1\6\1\0\2\6"+
    "\1\136\1\6\1\137\1\0\1\6\1\140\1\6\1\0"+
    "\1\6\1\0\3\6\2\141\1\0\1\6\1\0\1\6"+
    "\2\142\1\0\1\143\1\144\1\145\2\0\1\146\1\0"+
    "\2\6\1\0\2\6\2\147\1\0\1\6\2\0\2\6"+
    "\1\150\1\0\2\6\1\0\1\6\1\0\2\6\2\151"+
    "\1\0\1\6\1\0\1\6\2\152\2\153\2\154\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\1\6\2\155\2\6"+
    "\1\0\1\6\2\156\1\0\1\157\1\160\1\0\2\6"+
    "\1\0\2\6\1\0\1\6\2\0\2\6\1\0\1\6"+
    "\1\0\1\6\1\0\1\6\2\161\1\162\2\163\1\0"+
    "\1\6\1\164\2\165\1\0\1\6\2\166\1\167\1\6"+
    "\2\170\1\0\2\171\1\172\1\0\1\6\1\173\2\174"+
    "\2\0\2\6\1\0\1\6\2\175\2\176\1\0\1\6"+
    "\2\177\1\200\1\201\1\0\1\6\1\0\1\202\1\6"+
    "\1\202\1\0\1\6\1\0\1\6\1\0\1\6\1\0"+
    "\1\6\2\203\1\0\1\6\1\0\1\6\1\0\1\6"+
    "\1\0\1\6\1\0\1\6\1\0\1\6\2\204\1\0"+
    "\1\6\2\205\2\206";

  private static int [] zzUnpackAction() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\100\0\200\0\300\0\u0100\0\u0140\0\u0100\0\u0180"+
    "\0\u01c0\0\u0200\0\u0240\0\u0280\0\u02c0\0\u0300\0\u0340\0\u0380"+
    "\0\u03c0\0\u0400\0\u0440\0\u0480\0\u04c0\0\u0500\0\u0540\0\u0580"+
    "\0\u0100\0\u05c0\0\u0600\0\u0640\0\u0680\0\u06c0\0\u0700\0\u0740"+
    "\0\u0780\0\u07c0\0\u0800\0\u0100\0\u0840\0\u0880\0\u0100\0\u0100"+
    "\0\u0100\0\u0100\0\u0100\0\u08c0\0\u0900\0\u0940\0\u0100\0\u0980"+
    "\0\u0100\0\u09c0\0\u0180\0\u0100\0\u0a00\0\u0a40\0\u0a80\0\u0ac0"+
    "\0\u0b00\0\u0b40\0\u0b80\0\u0bc0\0\u0c00\0\u0c40\0\u0c80\0\u0cc0"+
    "\0\u0d00\0\u0d40\0\u0d80\0\u0dc0\0\u0e00\0\u0e40\0\u0e80\0\u0ec0"+
    "\0\u0f00\0\u0f40\0\u0f80\0\u0fc0\0\u1000\0\u1040\0\u1080\0\u10c0"+
    "\0\u1100\0\u1140\0\u1180\0\u11c0\0\u0100\0\u0100\0\u1200\0\u1240"+
    "\0\u1280\0\u12c0\0\u1300\0\u1340\0\u1380\0\u13c0\0\u1400\0\u0100"+
    "\0\u1440\0\u1480\0\u14c0\0\u1500\0\u1540\0\u1580\0\u15c0\0\u1600"+
    "\0\u1640\0\u1680\0\u16c0\0\u1700\0\u1740\0\u1780\0\u17c0\0\u1800"+
    "\0\u1840\0\u1880\0\u18c0\0\u1900\0\u1940\0\u0100\0\u0100\0\u0100"+
    "\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100"+
    "\0\u0100\0\u1980\0\u19c0\0\u1a00\0\u1a40\0\u1a80\0\u1ac0\0\u1b00"+
    "\0\u1b40\0\u1b80\0\u1bc0\0\u1c00\0\u1c40\0\u1c80\0\u1cc0\0\u1d00"+
    "\0\u1d40\0\u1d80\0\u1dc0\0\u1e00\0\u1e40\0\u1e80\0\u1ec0\0\u1f00"+
    "\0\u1f40\0\u1f80\0\u1fc0\0\u2000\0\u2040\0\u2080\0\u20c0\0\u2100"+
    "\0\u2140\0\u2180\0\u21c0\0\u2200\0\u2240\0\u2280\0\u22c0\0\u2300"+
    "\0\u0100\0\u2340\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100"+
    "\0\u0100\0\u2380\0\u0100\0\u23c0\0\u2400\0\u2440\0\u2480\0\u24c0"+
    "\0\u2500\0\u2540\0\u2580\0\u25c0\0\u2600\0\u2640\0\u2680\0\u26c0"+
    "\0\u2700\0\u2740\0\u2780\0\u27c0\0\u2800\0\u2840\0\u2880\0\u28c0"+
    "\0\u2900\0\u2940\0\u0100\0\u2980\0\u29c0\0\u0200\0\u2a00\0\u2a40"+
    "\0\u2a80\0\u2ac0\0\u2b00\0\u2b40\0\u2b80\0\u2bc0\0\u2c00\0\u2c40"+
    "\0\u2c80\0\u2cc0\0\u2d00\0\u2d40\0\u2d80\0\u2dc0\0\u2e00\0\u2e40"+
    "\0\u2e80\0\u2ec0\0\u2f00\0\u2f40\0\u2f80\0\u2fc0\0\u0200\0\u3000"+
    "\0\u3040\0\u3080\0\u30c0\0\u3100\0\u3140\0\u3180\0\u31c0\0\u3200"+
    "\0\u3240\0\u3280\0\u32c0\0\u3300\0\u0200\0\u3340\0\u3380\0\u33c0"+
    "\0\u3400\0\u3440\0\u0200\0\u3480\0\u34c0\0\u3500\0\u3540\0\u3580"+
    "\0\u35c0\0\u3600\0\u3640\0\u3680\0\u36c0\0\u3700\0\u3740\0\u0100"+
    "\0\u3780\0\u0100\0\u37c0\0\u3800\0\u3840\0\u3880\0\u38c0\0\u3900"+
    "\0\u3940\0\u3980\0\u39c0\0\u3a00\0\u3a40\0\u3a80\0\u3ac0\0\u3b00"+
    "\0\u3b40\0\u3b80\0\u3bc0\0\u3c00\0\u0100\0\u0100\0\u3c40\0\u3c80"+
    "\0\u3cc0\0\u3d00\0\u3d40\0\u3d80\0\u3dc0\0\u3e00\0\u3e40\0\u3e80"+
    "\0\u3ec0\0\u3f00\0\u3f40\0\u3f80\0\u3fc0\0\u4000\0\u4040\0\u4080"+
    "\0\u40c0\0\u4100\0\u4140\0\u4180\0\u41c0\0\u4200\0\u4240\0\u4280"+
    "\0\u42c0\0\u4300\0\u4340\0\u4380\0\u43c0\0\u4400\0\u4440\0\u4480"+
    "\0\u0200\0\u44c0\0\u4500\0\u4540\0\u0100\0\u0200\0\u4580\0\u45c0"+
    "\0\u0200\0\u4600\0\u4640\0\u4680\0\u46c0\0\u4700\0\u0200\0\u4740"+
    "\0\u4780\0\u47c0\0\u0100\0\u0200\0\u4800\0\u4840\0\u0100\0\u0200"+
    "\0\u4880\0\u48c0\0\u4900\0\u4940\0\u4980\0\u49c0\0\u4a00\0\u4a40"+
    "\0\u4a80\0\u0100\0\u0200\0\u4ac0\0\u0100\0\u4b00\0\u4b40\0\u4b80"+
    "\0\u0100\0\u0100\0\u0200\0\u4bc0\0\u4c00\0\u0200\0\u0200\0\u4c40"+
    "\0\u4c80\0\u4cc0\0\u4d00\0\u4d40\0\u4d80\0\u0100\0\u4dc0\0\u0100"+
    "\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u0100\0\u4e00\0\u0100"+
    "\0\u4e40\0\u4e80\0\u0100\0\u4ec0\0\u4f00\0\u4f40\0\u4f80\0\u4fc0"+
    "\0\u5000\0\u5040\0\u5080\0\u50c0\0\u5100\0\u5140\0\u5180\0\u51c0"+
    "\0\u5200\0\u5240\0\u5280\0\u52c0\0\u5300\0\u5340\0\u5380\0\u53c0"+
    "\0\u5400\0\u5440\0\u5480\0\u0100\0\u0200\0\u54c0\0\u5500\0\u5540"+
    "\0\u5580\0\u55c0\0\u5600\0\u0200\0\u5640\0\u5680\0\u56c0\0\u5700"+
    "\0\u5740\0\u5780\0\u57c0\0\u5800\0\u5840\0\u5880\0\u58c0\0\u5900"+
    "\0\u5940\0\u5980\0\u59c0\0\u0100\0\u0200\0\u5a00\0\u5a40\0\u0200"+
    "\0\u5a80\0\u5ac0\0\u5b00\0\u5b40\0\u5b80\0\u5bc0\0\u5c00\0\u5c40"+
    "\0\u5c80\0\u5cc0\0\u5d00\0\u5d40\0\u5d80\0\u5dc0\0\u5e00\0\u0100"+
    "\0\u0100\0\u0200\0\u0200\0\u0100\0\u0100\0\u0100\0\u5e40\0\u0100"+
    "\0\u5e80\0\u5ec0\0\u5f00\0\u5f40\0\u5f80\0\u5fc0\0\u6000\0\u6040"+
    "\0\u6080\0\u60c0\0\u6100\0\u0200\0\u0200\0\u6140\0\u6180\0\u0100"+
    "\0\u0200\0\u61c0\0\u6200\0\u6240\0\u6280\0\u62c0\0\u6300\0\u6340"+
    "\0\u6380\0\u0100\0\u63c0\0\u0200\0\u6400\0\u6440\0\u6480\0\u64c0"+
    "\0\u6500\0\u6540\0\u6580\0\u65c0\0\u6600\0\u6640\0\u6680\0\u66c0"+
    "\0\u0100\0\u0200\0\u6700\0\u6740\0\u6780\0\u67c0\0\u6800\0\u0200"+
    "\0\u6840\0\u0200\0\u6880\0\u68c0\0\u0200\0\u6900\0\u6940\0\u6980"+
    "\0\u69c0\0\u6a00\0\u6a40\0\u6a80\0\u0100\0\u0200\0\u6ac0\0\u6b00"+
    "\0\u6b40\0\u6b80\0\u0100\0\u0200\0\u6bc0\0\u0100\0\u0100\0\u0100"+
    "\0\u6c00\0\u6c40\0\u0100\0\u6c80\0\u6cc0\0\u6d00\0\u6d40\0\u6d80"+
    "\0\u6dc0\0\u0100\0\u0200\0\u6e00\0\u6e40\0\u6e80\0\u6ec0\0\u6f00"+
    "\0\u6f40\0\u0200\0\u6f80\0\u6fc0\0\u7000\0\u7040\0\u7080\0\u70c0"+
    "\0\u7100\0\u7140\0\u0100\0\u0200\0\u7180\0\u71c0\0\u7200\0\u7240"+
    "\0\u0100\0\u0200\0\u0100\0\u0200\0\u0100\0\u0200\0\u7280\0\u72c0"+
    "\0\u7300\0\u7340\0\u7380\0\u73c0\0\u7400\0\u0100\0\u0200\0\u7440"+
    "\0\u7480\0\u74c0\0\u7500\0\u0100\0\u0200\0\u7540\0\u0100\0\u0100"+
    "\0\u7580\0\u75c0\0\u7600\0\u7640\0\u7680\0\u76c0\0\u7700\0\u7740"+
    "\0\u7780\0\u77c0\0\u7800\0\u7840\0\u7880\0\u78c0\0\u7900\0\u7940"+
    "\0\u7980\0\u79c0\0\u0100\0\u0200\0\u0200\0\u0100\0\u0200\0\u7a00"+
    "\0\u7a40\0\u0200\0\u0100\0\u0200\0\u7a80\0\u7ac0\0\u0100\0\u0200"+
    "\0\u0200\0\u7b00\0\u0100\0\u0200\0\u7b40\0\u0100\0\u0200\0\u0200"+
    "\0\u7b80\0\u7bc0\0\u0200\0\u0100\0\u0200\0\u7c00\0\u7c40\0\u7c80"+
    "\0\u7cc0\0\u7d00\0\u7d40\0\u0100\0\u0200\0\u0100\0\u0200\0\u7d80"+
    "\0\u7dc0\0\u0100\0\u0200\0\u0200\0\u0100\0\u7e00\0\u7e40\0\u7e80"+
    "\0\u0100\0\u7ec0\0\u0200\0\u7f00\0\u7f40\0\u7f80\0\u7fc0\0\u8000"+
    "\0\u8040\0\u8080\0\u80c0\0\u0100\0\u0200\0\u8100\0\u8140\0\u8180"+
    "\0\u81c0\0\u8200\0\u8240\0\u8280\0\u82c0\0\u8300\0\u8340\0\u8380"+
    "\0\u83c0\0\u0100\0\u0200\0\u8400\0\u8440\0\u0100\0\u0200\0\u0100"+
    "\0\u0200";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\5\1\6\1\7\1\10\1\11\1\12\1\5\1\11"+
    "\1\13\1\14\1\12\1\15\1\16\1\17\1\20\1\21"+
    "\1\12\1\22\1\23\1\6\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\12\5\6\1\33\1\34\1\35"+
    "\1\36\1\12\1\37\1\40\4\12\1\5\1\12\1\41"+
    "\1\12\1\42\1\43\1\44\1\45\1\46\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\55\1\56\2\11\1\0"+
    "\30\57\1\5\1\60\52\57\1\61\73\57\4\5\1\0"+
    "\71\5\103\0\1\6\1\62\20\0\1\6\10\0\5\6"+
    "\37\0\3\63\2\64\73\63\4\0\1\11\2\0\1\11"+
    "\65\0\2\11\2\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\20\0\100\65\1\0\1\12"+
    "\3\0\3\12\1\0\1\12\1\66\2\12\1\67\3\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\70\3\12\1\71\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\1\12"+
    "\1\72\3\12\1\73\2\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\2\12\1\74\4\12"+
    "\1\75\1\0\2\12\1\0\2\12\1\76\2\0\7\12"+
    "\1\0\4\12\1\77\1\100\1\12\1\101\2\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\1\12\1\102\10\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\2\12\1\103\1\12\1\104"+
    "\1\105\2\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\32\0\1\106"+
    "\2\0\1\107\10\0\1\110\15\0\1\111\12\0\1\112"+
    "\21\0\1\12\3\0\3\12\1\0\1\12\1\113\2\12"+
    "\1\114\3\12\1\0\2\12\1\0\1\12\1\115\1\12"+
    "\2\0\7\12\1\0\2\12\1\116\7\12\1\0\1\12"+
    "\1\0\1\117\34\0\1\120\10\0\1\121\1\122\2\0"+
    "\1\123\1\124\10\0\1\125\17\0\1\126\15\0\1\12"+
    "\3\0\3\12\1\0\1\12\1\127\6\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\1\12"+
    "\1\130\6\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\131\1\132\11\12\1\0\1\12\1\0\1\133\21\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\134\3\12\1\135"+
    "\2\12\1\0\2\12\1\0\3\12\2\0\7\12\1\136"+
    "\1\137\11\12\1\0\1\12\1\0\1\12\103\0\1\140"+
    "\15\0\1\12\3\0\3\12\1\0\4\12\1\141\1\142"+
    "\1\12\1\143\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\47\0\1\144"+
    "\17\0\1\145\1\0\1\146\27\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\2\12\1\147\2\0"+
    "\7\12\1\0\5\12\1\150\1\12\1\151\2\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\2\12\1\152\1\12\1\153\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\1\12\1\154"+
    "\2\12\1\155\1\156\1\12\1\157\1\0\2\12\1\0"+
    "\1\160\2\12\2\0\7\12\1\0\10\12\1\161\1\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\162\1\163\1\12\1\164\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\5\12\1\165\2\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\50\0"+
    "\1\166\25\0\1\167\4\0\1\170\74\0\1\171\2\0"+
    "\1\172\77\0\1\173\77\0\1\174\77\0\1\175\106\0"+
    "\1\176\100\0\1\177\100\0\1\200\33\0\1\61\50\0"+
    "\1\62\21\0\1\62\10\0\5\62\47\0\1\201\70\0"+
    "\1\12\3\0\3\12\1\0\2\12\1\202\5\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\2\12\1\203\5\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\204\1\205\1\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\2\12\1\206\2\0\7\12\1\0"+
    "\6\12\1\207\3\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\2\12\1\210\5\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\2\12\1\211"+
    "\7\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\10\12\1\212\1\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\213\1\214\1\12"+
    "\1\215\7\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\216\1\217\11\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\4\12\1\220"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\1\12\1\221\6\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\4\12\1\222"+
    "\3\12\1\0\2\12\1\0\1\12\1\223\1\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\10\12\1\224\1\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\1\12\1\225\6\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\226\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\7\12\1\227\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\5\12\1\230\4\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\5\12\1\231\4\12"+
    "\1\0\1\12\1\0\1\12\33\0\1\232\133\0\1\233"+
    "\43\0\1\234\77\0\1\235\2\0\1\236\122\0\2\237"+
    "\36\0\1\12\3\0\3\12\1\0\2\12\1\240\5\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\5\12\1\241\4\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\2\12\1\242\5\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\2\12\1\243\2\12\1\244\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\237\1\245"+
    "\11\12\1\0\1\12\1\0\1\12\61\0\2\246\47\0"+
    "\1\247\1\250\7\0\1\251\2\0\1\252\5\0\1\253"+
    "\1\254\1\255\1\256\1\257\52\0\1\260\1\261\1\262"+
    "\7\0\1\263\13\0\2\264\51\0\1\265\10\0\1\266"+
    "\1\267\3\0\1\270\10\0\1\271\47\0\1\272\2\0"+
    "\1\273\62\0\1\12\3\0\3\12\1\0\7\12\1\274"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\3\12\1\275\6\12\1\0\1\12\1\0\1\12"+
    "\47\0\1\276\51\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\2\12\1\277\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\2\12\1\300\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\1\12\1\301\1\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\2\12\1\302\1\303\4\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\5\12\1\304\4\12\1\0"+
    "\1\12\1\0\1\12\67\0\1\305\31\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\5\12\1\306\4\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\307"+
    "\4\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\5\12\1\310\2\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\4\12\1\311"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\63\0\1\312\62\0"+
    "\1\313\124\0\1\314\25\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\1\12\1\315\10\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\1\12\1\316\1\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\11\12\1\317\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\320\1\321\11\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\7\12\1\322"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\5\12\1\323\4\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\7\12\1\324\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\325"+
    "\4\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\7\12\1\326\1\0\2\12\1\0\2\12"+
    "\1\327\2\0\7\12\1\0\10\12\1\330\1\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\4\12\1\331\3\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\332\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\2\12\1\333\5\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\5\12\1\334\2\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\335"+
    "\1\336\11\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\2\12\1\337\5\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\2\12\1\340\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\3\12\1\341\4\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\342\1\343\11\12"+
    "\1\0\1\12\1\0\1\12\72\0\1\344\26\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\10\12\1\345\1\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\4\12"+
    "\1\346\3\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\5\12\1\347\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\1\12"+
    "\1\350\6\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\5\12\1\351\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\1\352\6\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\35\0\1\353\63\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\354\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\1\355\2\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\66\0\1\356"+
    "\32\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\4\12\1\357\5\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\2\12\1\360\5\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\5\12\1\361\4\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\2\12\1\362\5\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\363\1\364\11\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\7\12\1\365\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\5\12\1\366\4\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\5\12"+
    "\1\367\4\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\370\1\371\1\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\372\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\1\12\1\373"+
    "\1\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\61\0\2\374\56\0\2\375\116\0\2\376\76\0"+
    "\2\377\50\0\1\u0100\105\0\2\u0101\56\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\374\1\u0102\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\375\1\u0103"+
    "\1\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\376"+
    "\1\u0104\11\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\377\1\u0105\11\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\2\12\1\u0106"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\u0101\1\u0107\1\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\31\0\1\u0108\103\0\1\u0109\112\0\1\u010a\76\0\1\u010b"+
    "\102\0\1\u010c\73\0\1\u010d\112\0\2\u010e\47\0\1\u010f"+
    "\10\0\1\u0110\2\0\1\u0111\5\0\1\u0112\1\u0113\1\u0114"+
    "\1\u0115\1\u0116\52\0\1\u0117\1\u0118\1\u0119\7\0\1\u011a"+
    "\13\0\2\u011b\53\0\1\u011c\111\0\1\u011d\77\0\1\u011e"+
    "\63\0\1\u011f\64\0\1\12\3\0\3\12\1\0\1\u0120"+
    "\7\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\1\12\1\u0121"+
    "\1\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\32\0\1\u0122\66\0\1\12\3\0\3\12\1\0"+
    "\1\12\1\u0123\6\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\2\12\1\u0124\7\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\5\12\1\u0125\2\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\u0126\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\1\12\1\u0127\6\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\5\12\1\u0128\2\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\61\0\2\u0129\36\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\u0129\1\u012a\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\u012b\1\u012c"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\7\12"+
    "\1\u012d\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\2\12\1\u012e\1\12\1\u012f\5\12\1\0"+
    "\1\12\1\0\1\12\35\0\1\u0130\134\0\1\u0131\26\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\u0132\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\10\12\1\u0133\1\12\1\0\1\12\1\0\1\12\67\0"+
    "\1\u0134\31\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\u0135"+
    "\4\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u0136\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\u0137\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\u0138\1\u0139\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\1\12\1\u013a\1\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\5\12\1\u013b\2\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\u013c\1\u013d\11\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\2\12\1\u013e\5\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\u013f\1\u0140\1\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\2\12"+
    "\1\u0141\5\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\u0142\1\u0143\1\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\2\12\1\u0144"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\41\0\2\u0145\56\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\u0145\1\u0146\1\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\4\12"+
    "\1\u0147\3\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\1\u0148\6\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\1\12\1\u0149"+
    "\2\12\1\u014a\3\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\35\0"+
    "\1\u014b\63\0\1\12\3\0\3\12\1\0\4\12\1\u014c"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\40\0\1\u014d\60\0"+
    "\1\12\3\0\3\12\1\0\7\12\1\u014e\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\5\12"+
    "\1\u014f\4\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\2\12\1\u0150\7\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\2\12"+
    "\1\u0151\5\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\7\12\1\u0152\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\40\0\1\u0153\60\0\1\12\3\0\3\12\1\0"+
    "\7\12\1\u0154\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\u0155\1\u0156\11\12\1\0\1\12\1\0"+
    "\1\12\67\0\1\u0157\31\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\5\12\1\u0158\4\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\u0159\1\u015a\11\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\2\12"+
    "\1\u015b\7\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\4\12\1\u015c\3\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\73\0\1\u015d\25\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\11\12\1\u015e\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\2\12\1\u015f\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\u0160\1\u0161\1\0\1\12\36\0\1\u0162\62\0\1\12"+
    "\3\0\3\12\1\0\5\12\1\u0163\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\4\12"+
    "\1\u0164\3\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\37\0\1\u0165"+
    "\136\0\1\u0166\70\0\1\u0167\73\0\1\u0168\46\0\1\u0169"+
    "\106\0\2\u016a\56\0\1\12\3\0\3\12\1\0\6\12"+
    "\1\u016b\1\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\u0166\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\5\12\1\u016c\4\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\1\12\1\u016d\10\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\1\12\1\u016e\6\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\u016a\1\u016f\1\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\34\0"+
    "\1\u0170\103\0\1\u0171\77\0\1\u0172\77\0\1\u0173\70\0"+
    "\1\u0174\103\0\1\u0175\112\0\1\u0176\76\0\1\u0177\100\0"+
    "\1\u0178\77\0\1\u0179\77\0\1\u017a\77\0\1\u017b\77\0"+
    "\1\u017c\77\0\1\u017d\77\0\1\u017e\101\0\1\u017f\75\0"+
    "\1\u0180\75\0\1\u0181\65\0\1\u0182\116\0\1\u0183\45\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u0184\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\2\12\1\u0185\7\12\1\0\1\12\1\0\1\12\41\0"+
    "\2\u0186\56\0\1\12\3\0\3\12\1\0\10\12\1\u0186"+
    "\1\u0187\1\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\u0188\6\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\3\12\1\u0189\4\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\3\12\1\u018a\4\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\2\12\1\u018b\5\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\u018c\1\u018d\1\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\36\0"+
    "\1\u018e\62\0\1\12\3\0\3\12\1\0\5\12\1\u018f"+
    "\2\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\37\0\1\u0190\26\0"+
    "\1\u0191\32\0\1\12\3\0\3\12\1\0\6\12\1\u0192"+
    "\1\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\4\12\1\u0193\5\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u0194\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\u0195\1\u0196\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\5\12\1\u0197\2\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\64\0\1\u0198\74\0\2\u0199\36\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\2\12\1\u019a\7\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\u0199\1\u019b\11\12"+
    "\1\0\1\12\1\0\1\12\46\0\1\u019c\52\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\1\12"+
    "\1\u019d\1\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\1\12\1\u019e\1\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\2\12\1\u019f\5\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\52\0\1\u01a0\46\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\1\u01a1"+
    "\6\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\u01a2\1\u01a3\11\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\2\12"+
    "\1\u01a4\5\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\64\0\1\u01a5"+
    "\34\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\2\12\1\u01a6\7\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\u01a7\1\u01a8\11\12\1\0\1\12\1\0\1\12\32\0"+
    "\1\u01a9\66\0\1\12\3\0\3\12\1\0\1\12\1\u01aa"+
    "\6\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\61\0\2\u01ab\36\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\u01ab\1\u01ac\11\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\4\12"+
    "\1\u01ad\5\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\2\12"+
    "\1\u01ae\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\2\12\1\u01af"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\3\12\1\u01b0\4\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\5\12\1\u01b1\4\12\1\0"+
    "\1\12\1\0\1\12\52\0\1\u01b2\46\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\1\u01b3\6\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\46\0\1\u01b4\52\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\1\12\1\u01b5\1\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\1\u01b6"+
    "\2\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\4\12\1\u01b7"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\1\12\1\u01b8\6\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\46\0\1\u01b9\52\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\1\12\1\u01ba\1\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\40\0"+
    "\1\u01bb\60\0\1\12\3\0\3\12\1\0\7\12\1\u01bc"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\1\12"+
    "\1\u01bd\5\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\5\12\1\u01be\4\12"+
    "\1\0\1\12\1\0\1\12\72\0\1\u01bf\26\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\10\12\1\u01c0\1\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\u01c1\1\u01c2\1\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\46\0\1\u01c3\52\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\1\12\1\u01c4\1\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\u01c5\1\u01c6\1\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\41\0\2\u01c7"+
    "\123\0\1\u01c8\57\0\1\u01c9\52\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\4\12\1\u01ca\5\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\1\12\1\u01cb\1\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\50\0\1\u01cc\77\0\1\u01cd"+
    "\61\0\1\u01ce\77\0\1\u01cf\115\0\1\u01d0\63\0\1\u01d1"+
    "\103\0\1\u01d2\77\0\1\u01d3\77\0\1\u01d4\112\0\1\u01d5"+
    "\45\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\1\12\1\u01d6\1\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\5\12\1\u01d7\2\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\27\0\1\u01d8\71\0\1\12\3\0\2\12\1\u01d9\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\5\12\1\u01da\4\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\5\12\1\u01db"+
    "\2\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\5\12\1\u01dc\2\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\u01dd"+
    "\4\12\1\0\1\12\1\0\1\12\63\0\1\u01de\35\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\1\12\1\u01df\10\12\1\0"+
    "\1\12\1\0\1\12\67\0\1\u01e0\31\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\5\12\1\u01e1\4\12\1\0\1\12\1\0"+
    "\1\12\72\0\1\u01e2\43\0\1\u01e3\62\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\10\12\1\u01e4\1\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\5\12\1\u01e5"+
    "\2\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u01e6\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\40\0\1\u01e7\60\0\1\12\3\0\3\12\1\0"+
    "\7\12\1\u01e8\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\1\u01e9\7\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\46\0\1\u01ea\63\0\1\u01eb\66\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\1\12\1\u01ec"+
    "\1\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\1\12\1\u01ed"+
    "\6\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\u01ee\1\u01ef\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\4\12\1\u01f0\3\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\33\0\1\u01f1\65\0\1\12"+
    "\3\0\3\12\1\0\2\12\1\u01f2\5\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\34\0\1\u01f3\64\0\1\12\3\0\3\12"+
    "\1\0\3\12\1\u01f4\4\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\27\0\1\u01f5\71\0\1\12\3\0\2\12\1\u01f6\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\32\0\1\u01f7\66\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u01f8\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\41\0\2\u01f9\56\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\u01f9\1\u01fa\1\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\31\0\1\u01fb\67\0\1\12\3\0\3\12\1\0\1\u01fc"+
    "\7\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\u01fd\1\u01fe\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\5\12\1\u01ff\2\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\u0200\6\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\1\12\1\u0201\6\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\4\12\1\u0202\3\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\40\0\1\u0203\60\0\1\12\3\0\3\12\1\0\7\12"+
    "\1\u0204\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u0205\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\u0206\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\32\0\1\u0207\66\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u0208\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\40\0\1\u0209\60\0\1\12\3\0"+
    "\3\12\1\0\7\12\1\u020a\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\2\12\1\u020b\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\6\12\1\u020c\3\12\1\0\1\12\1\0\1\12\35\0"+
    "\1\u020d\63\0\1\12\3\0\3\12\1\0\4\12\1\u020e"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\35\0\1\u020f\63\0"+
    "\1\12\3\0\3\12\1\0\4\12\1\u0210\3\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\72\0\1\u0211\26\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\10\12\1\u0212\1\12\1\0\1\12\1\0"+
    "\1\12\53\0\1\u0213\45\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\1\12\1\u0214"+
    "\5\12\1\0\12\12\1\0\1\12\1\0\1\12\32\0"+
    "\1\u0215\115\0\1\u0216\77\0\1\u0217\77\0\1\u0218\61\0"+
    "\1\u0219\77\0\1\u021a\115\0\1\u021b\50\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\u021c\1\u021d\11\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\7\12\1\u021e\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\67\0\1\u021f\31\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\5\12\1\u0220\4\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\2\12\1\u0221\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\u0222\1\u0223\1\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\35\0"+
    "\1\u0224\63\0\1\12\3\0\3\12\1\0\4\12\1\u0225"+
    "\3\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\46\0\1\u0226\77\0"+
    "\1\u0227\52\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\u0228\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\1\12\1\u0229"+
    "\1\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\u022a"+
    "\4\12\1\0\1\12\1\0\1\12\32\0\1\u022b\66\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u022c\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\1\12\1\u022d\6\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\33\0"+
    "\1\u022e\65\0\1\12\3\0\3\12\1\0\2\12\1\u022f"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\67\0\1\u0230\31\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\5\12\1\u0231\4\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\3\12\1\u0232\4\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\61\0"+
    "\2\u0233\36\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\u0233\1\u0234\11\12"+
    "\1\0\1\12\1\0\1\12\35\0\1\u0235\63\0\1\12"+
    "\3\0\3\12\1\0\4\12\1\u0236\3\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\41\0\2\u0237\56\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\u0237\1\u0238\1\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\33\0"+
    "\1\u0239\65\0\1\12\3\0\3\12\1\0\2\12\1\u023a"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\32\0\1\u023b\66\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u023c\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\35\0\1\u023d\63\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u023e\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\u023f"+
    "\4\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\2\12\1\371\5\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\32\0\1\u0240\66\0\1\12\3\0\3\12\1\0"+
    "\1\12\1\u0241\6\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\u0242\1\u0243\11\12\1\0\1\12"+
    "\1\0\1\12\64\0\1\u0244\34\0\1\12\3\0\3\12"+
    "\1\0\10\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\2\12\1\u0245\7\12\1\0\1\12\1\0\1\12"+
    "\36\0\1\u0246\62\0\1\12\3\0\3\12\1\0\5\12"+
    "\1\u0247\2\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\6\12\1\u0248\1\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\4\12"+
    "\1\u0249\3\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\67\0\1\u024a"+
    "\31\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\5\12\1\u024b\4\12"+
    "\1\0\1\12\1\0\1\12\33\0\1\u024c\65\0\1\12"+
    "\3\0\3\12\1\0\2\12\1\u024d\5\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\33\0\1\u024e\114\0\1\u024f\77\0\1\u0250"+
    "\113\0\1\u0251\34\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\2\12"+
    "\1\u0252\7\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\5\12\1\u0253\2\12\1\0\2\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\32\0\1\u0254\66\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\u0255\6\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\2\12\1\u0256\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\64\0\1\u0257\34\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\2\12\1\u0258\7\12\1\0\1\12\1\0"+
    "\1\12\72\0\1\u0259\52\0\1\u025a\53\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\10\12\1\u025b\1\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\u025c\2\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\46\0\1\u025d\52\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\1\12"+
    "\1\u025e\1\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\21\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\u025f\1\u0260\1\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\34\0\1\u0261\64\0"+
    "\1\12\3\0\3\12\1\0\3\12\1\u0262\4\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\36\0\1\u0263\62\0\1\12\3\0"+
    "\3\12\1\0\5\12\1\u0264\2\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\5\12\1\u0265"+
    "\2\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\34\0\1\u0266\64\0"+
    "\1\12\3\0\3\12\1\0\3\12\1\u0267\4\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\35\0\1\u0268\63\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u0269\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\3\12\1\u026a"+
    "\4\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\41\0\2\u026b\56\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\u026b\1\u026c\1\12"+
    "\1\0\3\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\31\0\1\u026d\67\0\1\12\3\0\3\12"+
    "\1\0\1\u026e\7\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\46\0"+
    "\1\u026f\52\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\u0270\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\21\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\1\u0271\6\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\21\0\1\12\3\0\3\12\1\0\3\12\1\u0272\4\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\41\0\2\u0273\56\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\u0273\1\u0274\1\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\61\0\2\u0275\52\0\1\u0276\63\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u0277\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\21\0\1\12\3\0\3\12\1\0\2\12\1\u0278"+
    "\5\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\77\0\1\u0279\21\0"+
    "\1\12\3\0\3\12\1\0\10\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\u027a\21\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\1\12\1\u027b\1\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\32\0\1\u027c\66\0"+
    "\1\12\3\0\3\12\1\0\1\12\1\u027d\6\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\33\0\1\u027e\125\0\2\u027f\36\0"+
    "\1\12\3\0\3\12\1\0\2\12\1\u0280\5\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\21\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\u027f"+
    "\1\u0281\11\12\1\0\1\12\1\0\1\12\46\0\1\u0282"+
    "\52\0\1\12\3\0\3\12\1\0\10\12\1\0\2\12"+
    "\1\0\1\12\1\u0283\1\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\46\0\1\u0284\52\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\1\12"+
    "\1\u0285\1\12\2\0\7\12\1\0\12\12\1\0\1\12"+
    "\1\0\1\12\35\0\1\u0286\63\0\1\12\3\0\3\12"+
    "\1\0\4\12\1\u0287\3\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\67\0\1\u0288\31\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\5\12"+
    "\1\u0289\4\12\1\0\1\12\1\0\1\12\32\0\1\u028a"+
    "\66\0\1\12\3\0\3\12\1\0\1\12\1\u028b\6\12"+
    "\1\0\2\12\1\0\3\12\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\21\0\1\12\3\0\3\12"+
    "\1\0\5\12\1\u028c\2\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\37\0\1\u028d\67\0\1\u028e\71\0\1\12\3\0\2\12"+
    "\1\u028f\1\0\10\12\1\0\2\12\1\0\3\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\61\0"+
    "\2\u0290\101\0\1\u0291\34\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\u0290"+
    "\1\u0292\11\12\1\0\1\12\1\0\1\12\21\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\2\12\1\u0293\7\12\1\0\1\12"+
    "\1\0\1\12\32\0\1\u0294\66\0\1\12\3\0\3\12"+
    "\1\0\1\12\1\u0295\6\12\1\0\2\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\41\0\2\u0296\56\0\1\12\3\0\3\12\1\0\10\12"+
    "\1\u0296\1\u0297\1\12\1\0\3\12\2\0\7\12\1\0"+
    "\12\12\1\0\1\12\1\0\1\12\33\0\1\u0298\65\0"+
    "\1\12\3\0\3\12\1\0\2\12\1\u0299\5\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\41\0\2\u029a\56\0\1\12\3\0"+
    "\3\12\1\0\10\12\1\u029a\1\u029b\1\12\1\0\3\12"+
    "\2\0\7\12\1\0\12\12\1\0\1\12\1\0\1\12"+
    "\33\0\1\u029c\65\0\1\12\3\0\3\12\1\0\2\12"+
    "\1\u029d\5\12\1\0\2\12\1\0\3\12\2\0\7\12"+
    "\1\0\12\12\1\0\1\12\1\0\1\12\27\0\1\u029e"+
    "\71\0\1\12\3\0\2\12\1\u029f\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\36\0\1\u02a0\62\0\1\12\3\0"+
    "\3\12\1\0\5\12\1\u02a1\2\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\46\0\1\u02a2\52\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\1\12\1\u02a3\1\12\2\0"+
    "\7\12\1\0\12\12\1\0\1\12\1\0\1\12\47\0"+
    "\1\u02a4\51\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\2\12\1\u02a5\2\0\7\12\1\0\12\12"+
    "\1\0\1\12\1\0\1\12\47\0\1\u02a6\51\0\1\12"+
    "\3\0\3\12\1\0\10\12\1\0\2\12\1\0\2\12"+
    "\1\u02a7\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\61\0\2\u02a8\36\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\u02a8"+
    "\1\u02a9\11\12\1\0\1\12\1\0\1\12\41\0\2\u02aa"+
    "\56\0\1\12\3\0\3\12\1\0\10\12\1\u02aa\1\u02ab"+
    "\1\12\1\0\3\12\2\0\7\12\1\0\12\12\1\0"+
    "\1\12\1\0\1\12\35\0\1\u02ac\63\0\1\12\3\0"+
    "\3\12\1\0\4\12\1\u02ad\3\12\1\0\2\12\1\0"+
    "\3\12\2\0\7\12\1\0\12\12\1\0\1\12\1\0"+
    "\1\12\64\0\1\u02ae\34\0\1\12\3\0\3\12\1\0"+
    "\10\12\1\0\2\12\1\0\3\12\2\0\7\12\1\0"+
    "\2\12\1\u02af\7\12\1\0\1\12\1\0\1\12\67\0"+
    "\1\u02b0\31\0\1\12\3\0\3\12\1\0\10\12\1\0"+
    "\2\12\1\0\3\12\2\0\7\12\1\0\5\12\1\u02b1"+
    "\4\12\1\0\1\12\1\0\1\12\20\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[33920];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\11\1\1\1\11\21\1\1\11\12\1\1\11"+
    "\2\1\5\11\3\1\1\11\1\1\1\11\1\1\1\0"+
    "\1\11\1\0\20\1\5\0\5\1\3\0\1\1\1\0"+
    "\2\11\2\1\1\0\4\1\1\0\1\1\1\11\3\1"+
    "\3\0\17\1\14\11\2\1\1\0\6\1\1\0\2\1"+
    "\1\0\13\1\6\0\6\1\3\0\1\11\1\0\7\11"+
    "\1\0\1\11\10\0\2\1\1\0\6\1\1\0\4\1"+
    "\1\0\1\11\1\0\3\1\1\0\14\1\1\0\4\1"+
    "\1\0\1\1\1\0\6\1\1\0\2\1\1\0\4\1"+
    "\1\0\4\1\1\0\3\1\6\0\6\1\1\11\1\0"+
    "\1\11\22\0\2\11\1\0\2\1\1\0\6\1\1\0"+
    "\1\1\1\0\4\1\2\0\2\1\1\0\3\1\1\0"+
    "\3\1\1\0\2\1\1\0\2\1\1\0\2\1\1\11"+
    "\5\1\1\0\1\1\1\0\5\1\1\11\1\1\1\0"+
    "\1\1\1\11\1\1\1\0\3\1\1\0\2\1\1\0"+
    "\1\1\1\11\2\1\1\11\3\0\2\11\5\1\6\0"+
    "\1\11\1\0\7\11\1\0\1\11\2\0\1\11\10\1"+
    "\1\0\1\1\1\0\1\1\2\0\3\1\1\0\2\1"+
    "\2\0\2\1\1\11\3\1\1\0\1\1\1\0\2\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\6\1"+
    "\1\0\1\1\1\11\4\1\1\0\1\1\1\0\3\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\2\11\2\1\3\11\1\0\1\11\5\0\2\1"+
    "\1\0\5\1\1\0\1\1\1\11\1\1\2\0\3\1"+
    "\1\0\2\1\1\11\1\0\2\1\1\0\2\1\1\0"+
    "\1\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\1\1\1\0\1\1\1\0\5\1\1\0\3\1\1\0"+
    "\1\1\1\0\3\1\1\11\1\1\1\0\1\1\1\0"+
    "\1\1\1\11\1\1\1\0\3\11\2\0\1\11\1\0"+
    "\2\1\1\0\2\1\1\11\1\1\1\0\1\1\2\0"+
    "\3\1\1\0\2\1\1\0\1\1\1\0\2\1\1\11"+
    "\1\1\1\0\1\1\1\0\1\1\1\11\1\1\1\11"+
    "\1\1\1\11\2\1\1\0\1\1\1\0\1\1\1\0"+
    "\1\1\1\11\3\1\1\0\1\1\1\11\1\1\1\0"+
    "\2\11\1\0\2\1\1\0\2\1\1\0\1\1\2\0"+
    "\2\1\1\0\1\1\1\0\1\1\1\0\1\1\1\11"+
    "\2\1\1\11\1\1\1\0\2\1\1\11\1\1\1\0"+
    "\1\1\1\11\3\1\1\11\1\1\1\0\1\11\2\1"+
    "\1\0\2\1\1\11\1\1\2\0\2\1\1\0\1\1"+
    "\1\11\1\1\1\11\1\1\1\0\1\1\1\11\2\1"+
    "\1\11\1\0\1\1\1\0\1\11\2\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\11\1\1"+
    "\1\0\1\1\1\0\1\1\1\0\1\1\1\0\1\1"+
    "\1\0\1\1\1\0\1\1\1\11\1\1\1\0\1\1"+
    "\1\11\1\1\1\11\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[689];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    //codigo de java
    String nombre;
    public void imprimir(String dato,String cadena){
    	//System.out.println(dato+" : "+cadena);
    }
    public void imprimir(String cadena){
    	//System.out.println(cadena+" soy reservada");
    }

    public ArrayList erroresL = new ArrayList();
    Sintactico sin = new Sintactico();

    private TablaSimbolos tabla;
    public Lexico(Reader in, TablaSimbolos t){
        this(in);
        this.tabla =t;
    }



  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexico(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 258) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(sym.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.err.println("Error lexico: "+yytext()+ " Linea:"+(yyline+1)+" Columna:"+(yycolumn+1));

        erroresL.add("Error lexico: "+yytext()+ " Linea:"+(yyline+1)+" Columna:"+(yycolumn+1)+"\n");
            }
          case 135: break;
          case 2: 
            { return new Symbol(sym.entero,yycolumn,yyline,new Integer(yytext()));
            }
          case 136: break;
          case 3: 
            { return new Symbol(sym.punto,yycolumn,yyline,yytext());
            }
          case 137: break;
          case 4: 
            { return new Symbol(sym.comia,yycolumn,yyline,yytext());
            }
          case 138: break;
          case 5: 
            { /* Se ignoran */
            }
          case 139: break;
          case 6: 
            { Simbolo s;if((s=tabla.buscar(yytext()))==null)s=tabla.insertar(yytext());return new Symbol(sym.iden,yycolumn,yyline,yytext());
            }
          case 140: break;
          case 7: 
            { return new Symbol(sym.menorq,yycolumn,yyline,yytext());
            }
          case 141: break;
          case 8: 
            { return new Symbol(sym.mayorq,yycolumn,yyline,yytext());
            }
          case 142: break;
          case 9: 
            { return new Symbol(sym.div,yycolumn,yyline,yytext());
            }
          case 143: break;
          case 10: 
            { return new Symbol(sym.menos,yycolumn,yyline,yytext());
            }
          case 144: break;
          case 11: 
            { return new Symbol(sym.mas,yycolumn,yyline,yytext());
            }
          case 145: break;
          case 12: 
            { return new Symbol(sym.mul,yycolumn,yyline,yytext());
            }
          case 146: break;
          case 13: 
            { return new Symbol(sym.modulo,yycolumn,yyline,yytext());
            }
          case 147: break;
          case 14: 
            { return new Symbol(sym.igual,yycolumn,yyline,yytext());
            }
          case 148: break;
          case 15: 
            { return new Symbol(sym.not,yycolumn,yyline,yytext());
            }
          case 149: break;
          case 16: 
            { return new Symbol(sym.puntoYcoma,yycolumn,yyline,yytext());
            }
          case 150: break;
          case 17: 
            { return new Symbol(sym.parA,yycolumn,yyline,yytext());
            }
          case 151: break;
          case 18: 
            { return new Symbol(sym.parC,yycolumn,yyline,yytext());
            }
          case 152: break;
          case 19: 
            { return new Symbol(sym.corA,yycolumn,yyline,yytext());
            }
          case 153: break;
          case 20: 
            { return new Symbol(sym.corC,yycolumn,yyline,yytext());
            }
          case 154: break;
          case 21: 
            { 
            }
          case 155: break;
          case 22: 
            { yybegin(YYINITIAL);
            }
          case 156: break;
          case 23: 
            { return new Symbol(sym.decimal,yycolumn,yyline,yytext());
            }
          case 157: break;
          case 24: 
            { return new Symbol(sym.cadena,yycolumn,yyline,yytext());
            }
          case 158: break;
          case 25: 
            { yybegin(COMENTARIO1);sin.al.add("comentario multilinea");
            }
          case 159: break;
          case 26: 
            { return new Symbol(sym.pA,yycolumn,yyline,yytext());
            }
          case 160: break;
          case 27: 
            { return new Symbol(sym.menorIgual,yycolumn,yyline,yytext());
            }
          case 161: break;
          case 28: 
            { return new Symbol(sym.mayorIgual,yycolumn,yyline,yytext());
            }
          case 162: break;
          case 29: 
            { yybegin(COMENTARIO2);sin.al.add("comentario de una linea");
            }
          case 163: break;
          case 30: 
            { return new Symbol(sym.decre,yycolumn,yyline,yytext());
            }
          case 164: break;
          case 31: 
            { return new Symbol(sym.menosIgual,yycolumn,yyline,yytext());
            }
          case 165: break;
          case 32: 
            { return new Symbol(sym.incre,yycolumn,yyline,yytext());
            }
          case 166: break;
          case 33: 
            { return new Symbol(sym.masIgual,yycolumn,yyline,yytext());
            }
          case 167: break;
          case 34: 
            { return new Symbol(sym.mulIgual,yycolumn,yyline,yytext());
            }
          case 168: break;
          case 35: 
            { return new Symbol(sym.igualIgual,yycolumn,yyline,yytext());
            }
          case 169: break;
          case 36: 
            { return new Symbol(sym.noIgual,yycolumn,yyline,yytext());
            }
          case 170: break;
          case 37: 
            { return new Symbol(sym.dobleDolar,yycolumn,yyline,yytext());
            }
          case 171: break;
          case 38: 
            { return new Symbol(sym.and,yycolumn,yyline,yytext());
            }
          case 172: break;
          case 39: 
            { return new Symbol(sym.or,yycolumn,yyline,yytext());
            }
          case 173: break;
          case 40: 
            { return new Symbol(sym.caracter,yycolumn,yyline,yytext());
            }
          case 174: break;
          case 41: 
            { return new Symbol(sym.h1A,yycolumn,yyline,yytext());
            }
          case 175: break;
          case 42: 
            { return new Symbol(sym.h2A,yycolumn,yyline,yytext());
            }
          case 176: break;
          case 43: 
            { return new Symbol(sym.h3A,yycolumn,yyline,yytext());
            }
          case 177: break;
          case 44: 
            { return new Symbol(sym.h4A,yycolumn,yyline,yytext());
            }
          case 178: break;
          case 45: 
            { return new Symbol(sym.h5A,yycolumn,yyline,yytext());
            }
          case 179: break;
          case 46: 
            { return new Symbol(sym.h6A,yycolumn,yyline,yytext());
            }
          case 180: break;
          case 47: 
            { return new Symbol(sym.trA,yycolumn,yyline,yytext());
            }
          case 181: break;
          case 48: 
            { return new Symbol(sym.tdA,yycolumn,yyline,yytext());
            }
          case 182: break;
          case 49: 
            { return new Symbol(sym.thA,yycolumn,yyline,yytext());
            }
          case 183: break;
          case 50: 
            { return new Symbol(sym.resInt,yycolumn,yyline,yytext());
            }
          case 184: break;
          case 51: 
            { return new Symbol(sym.rojo,yycolumn,yyline,yytext());
            }
          case 185: break;
          case 52: 
            { return new Symbol(sym.azul,yycolumn,yyline,yytext());
            }
          case 186: break;
          case 53: 
            { return new Symbol(sym.fon,yycolumn,yyline,yytext());
            }
          case 187: break;
          case 54: 
            { return new Symbol(sym.divA,yycolumn,yyline,yytext());
            }
          case 188: break;
          case 55: 
            { return new Symbol(sym.hr,yycolumn,yyline,yytext());
            }
          case 189: break;
          case 56: 
            { return new Symbol(sym.pC,yycolumn,yyline,yytext());
            }
          case 190: break;
          case 57: 
            { return new Symbol(sym.br,yycolumn,yyline,yytext());
            }
          case 191: break;
          case 58: 
            { return new Symbol(sym.resChar,yycolumn,yyline,yytext());
            }
          case 192: break;
          case 59: 
            { return new Symbol(sym.gris,yycolumn,yyline,yytext());
            }
          case 193: break;
          case 60: 
            { return new Symbol(sym.verde,yycolumn,yyline,yytext());
            }
          case 194: break;
          case 61: 
            { return new Symbol(sym.roman,yycolumn,yyline,yytext());
            }
          case 195: break;
          case 62: 
            { return new Symbol(sym.arial,yycolumn,yyline,yytext());
            }
          case 196: break;
          case 63: 
            { return new Symbol(sym.alig,yycolumn,yyline,yytext());
            }
          case 197: break;
          case 64: 
            { return new Symbol(sym.bool,yycolumn,yyline,yytext());
            }
          case 198: break;
          case 65: 
            { return new Symbol(sym.serif,yycolumn,yyline,yytext());
            }
          case 199: break;
          case 66: 
            { return new Symbol(sym.resScore,yycolumn,yyline,yytext());
            }
          case 200: break;
          case 67: 
            { return new Symbol(sym.swss,yycolumn,yyline,yytext());
            }
          case 201: break;
          case 68: 
            { return new Symbol(sym.h1C,yycolumn,yyline,yytext());
            }
          case 202: break;
          case 69: 
            { return new Symbol(sym.h2C,yycolumn,yyline,yytext());
            }
          case 203: break;
          case 70: 
            { return new Symbol(sym.h3C,yycolumn,yyline,yytext());
            }
          case 204: break;
          case 71: 
            { return new Symbol(sym.h4C,yycolumn,yyline,yytext());
            }
          case 205: break;
          case 72: 
            { return new Symbol(sym.h5C,yycolumn,yyline,yytext());
            }
          case 206: break;
          case 73: 
            { return new Symbol(sym.h6C,yycolumn,yyline,yytext());
            }
          case 207: break;
          case 74: 
            { return new Symbol(sym.trC,yycolumn,yyline,yytext());
            }
          case 208: break;
          case 75: 
            { return new Symbol(sym.tdC,yycolumn,yyline,yytext());
            }
          case 209: break;
          case 76: 
            { return new Symbol(sym.thC,yycolumn,yyline,yytext());
            }
          case 210: break;
          case 77: 
            { return new Symbol(sym.bodyA,yycolumn,yyline,yytext());
            }
          case 211: break;
          case 78: 
            { return new Symbol(sym.tms,yycolumn,yyline,yytext());
            }
          case 212: break;
          case 79: 
            { return new Symbol(sym.resPrint,yycolumn,yyline,yytext());
            }
          case 213: break;
          case 80: 
            { return new Symbol(sym.col,yycolumn,yyline,yytext());
            }
          case 214: break;
          case 81: 
            { return new Symbol(sym.resResult,yycolumn,yyline,yytext());
            }
          case 215: break;
          case 82: 
            { return new Symbol(sym.resDouble,yycolumn,yyline,yytext());
            }
          case 216: break;
          case 83: 
            { return new Symbol(sym.resString,yycolumn,yyline,yytext());
            }
          case 217: break;
          case 84: 
            { return new Symbol(sym.scri,yycolumn,yyline,yytext());
            }
          case 218: break;
          case 85: 
            { return new Symbol(sym.headA,yycolumn,yyline,yytext());
            }
          case 219: break;
          case 86: 
            { return new Symbol(sym.htmlA,yycolumn,yyline,yytext());
            }
          case 220: break;
          case 87: 
            { return new Symbol(sym.tableA,yycolumn,yyline,yytext());
            }
          case 221: break;
          case 88: 
            { return new Symbol(sym.divC,yycolumn,yyline,yytext());
            }
          case 222: break;
          case 89: 
            { return new Symbol(sym.morado,yycolumn,yyline,yytext());
            }
          case 223: break;
          case 90: 
            { return new Symbol(sym.modern,yycolumn,yyline,yytext());
            }
          case 224: break;
          case 91: 
            { return new Symbol(sym.minion,yycolumn,yyline,yytext());
            }
          case 225: break;
          case 92: 
            { return new Symbol(sym.impact,yycolumn,yyline,yytext());
            }
          case 226: break;
          case 93: 
            { return new Symbol(sym.resClases,yycolumn,yyline,yytext());
            }
          case 227: break;
          case 94: 
            { return new Symbol(sym.resNom,yycolumn,yyline,yytext());
            }
          case 228: break;
          case 95: 
            { return new Symbol(sym.ver,yycolumn,yyline,yytext());
            }
          case 229: break;
          case 96: 
            { return new Symbol(sym.derecha,yycolumn,yyline,yytext());
            }
          case 230: break;
          case 97: 
            { return new Symbol(sym.antiq,yycolumn,yyline,yytext());
            }
          case 231: break;
          case 98: 
            { return new Symbol(sym.fanta,yycolumn,yyline,yytext());
            }
          case 232: break;
          case 99: 
            { return new Symbol(sym.titleA,yycolumn,yyline,yytext());
            }
          case 233: break;
          case 100: 
            { return new Symbol(sym.headC,yycolumn,yyline,yytext());
            }
          case 234: break;
          case 101: 
            { return new Symbol(sym.htmlC,yycolumn,yyline,yytext());
            }
          case 235: break;
          case 102: 
            { return new Symbol(sym.bodyC,yycolumn,yyline,yytext());
            }
          case 236: break;
          case 103: 
            { return new Symbol(sym.resMet,yycolumn,yyline,yytext());
            }
          case 237: break;
          case 104: 
            { return new Symbol(sym.resBoolean,yycolumn,yyline,yytext());
            }
          case 238: break;
          case 105: 
            { return new Symbol(sym.calib,yycolumn,yyline,yytext());
            }
          case 239: break;
          case 106: 
            { return new Symbol(sym.cour,yycolumn,yyline,yytext());
            }
          case 240: break;
          case 107: 
            { return new Symbol(sym.curs,yycolumn,yyline,yytext());
            }
          case 241: break;
          case 108: 
            { return new Symbol(sym.georg,yycolumn,yyline,yytext());
            }
          case 242: break;
          case 109: 
            { return new Symbol(sym.amarillo,yycolumn,yyline,yytext());
            }
          case 243: break;
          case 110: 
            { return new Symbol(sym.frank,yycolumn,yyline,yytext());
            }
          case 244: break;
          case 111: 
            { return new Symbol(sym.tableC,yycolumn,yyline,yytext());
            }
          case 245: break;
          case 112: 
            { return new Symbol(sym.titleC,yycolumn,yyline,yytext());
            }
          case 246: break;
          case 113: 
            { return new Symbol(sym.pala,yycolumn,yyline,yytext());
            }
          case 247: break;
          case 114: 
            { return new Symbol(sym.centrado,yycolumn,yyline,yytext());
            }
          case 248: break;
          case 115: 
            { return new Symbol(sym.resCant,yycolumn,yyline,yytext());
            }
          case 249: break;
          case 116: 
            { return new Symbol(sym.garam,yycolumn,yyline,yytext());
            }
          case 250: break;
          case 117: 
            { return new Symbol(sym.resVar,yycolumn,yyline,yytext());
            }
          case 251: break;
          case 118: 
            { return new Symbol(sym.archi,yycolumn,yyline,yytext());
            }
          case 252: break;
          case 119: 
            { return new Symbol(sym.afb,yycolumn,yyline,yytext());
            }
          case 253: break;
          case 120: 
            { return new Symbol(sym.os,yycolumn,yyline,yytext());
            }
          case 254: break;
          case 121: 
            { return new Symbol(sym.helve,yycolumn,yyline,yytext());
            }
          case 255: break;
          case 122: 
            { return new Symbol(sym.txtcol,yycolumn,yyline,yytext());
            }
          case 256: break;
          case 123: 
            { return new Symbol(sym.tcm,yycolumn,yyline,yytext());
            }
          case 257: break;
          case 124: 
            { return new Symbol(sym.monos,yycolumn,yyline,yytext());
            }
          case 258: break;
          case 125: 
            { return new Symbol(sym.bv,yycolumn,yyline,yytext());
            }
          case 259: break;
          case 126: 
            { return new Symbol(sym.izquierda,yycolumn,yyline,yytext());
            }
          case 260: break;
          case 127: 
            { return new Symbol(sym.deco,yycolumn,yyline,yytext());
            }
          case 261: break;
          case 128: 
            { return new Symbol(sym.anaranjado,yycolumn,yyline,yytext());
            }
          case 262: break;
          case 129: 
            { return new Symbol(sym.sanss,yycolumn,yyline,yytext());
            }
          case 263: break;
          case 130: 
            { return new Symbol(sym.bg,yycolumn,yyline,yytext());
            }
          case 264: break;
          case 131: 
            { return new Symbol(sym.bl,yycolumn,yyline,yytext());
            }
          case 265: break;
          case 132: 
            { return new Symbol(sym.csm,yycolumn,yyline,yytext());
            }
          case 266: break;
          case 133: 
            { return new Symbol(sym.bf,yycolumn,yyline,yytext());
            }
          case 267: break;
          case 134: 
            { return new Symbol(sym.tnr,yycolumn,yyline,yytext());
            }
          case 268: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
